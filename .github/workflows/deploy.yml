name: Deploy Frontend to S3

on:
  push:
    branches:
      - develop
      - main

permissions:
  contents: read

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'npm'

      - name: Clean install dependencies
        run: |
          rm -f package-lock.json
          npm install

      - name: Set environment variables
        run: |
          echo "VITE_MSW_ENABLED=false" >> $GITHUB_ENV
          if [[ "${GITHUB_REF}" == "refs/heads/main" ]]; then
            echo "VITE_API_URL=https://api.onrank.kr" >> $GITHUB_ENV
            echo "VITE_FRONTEND_URL=https://onrank.kr" >> $GITHUB_ENV
            echo "VITE_CLOUDFRONT_URL=https://onrank.kr" >> $GITHUB_ENV
            echo "S3_PREFIX=main" >> $GITHUB_ENV
            echo "CLOUDFRONT_ID=${{ secrets.PROD_CLOUDFRONT_ID }}" >> $GITHUB_ENV
          else
            echo "VITE_API_URL=https://api-dev.onrank.kr" >> $GITHUB_ENV
            echo "VITE_FRONTEND_URL=https://dev.onrank.kr" >> $GITHUB_ENV
            echo "VITE_CLOUDFRONT_URL=https://dev.onrank.kr" >> $GITHUB_ENV
            echo "S3_PREFIX=develop" >> $GITHUB_ENV
            echo "CLOUDFRONT_ID=${{ secrets.DEV_CLOUDFRONT_ID }}" >> $GITHUB_ENV
          fi

      - name: üîç Show env vars
        run: |
          echo "‚öôÔ∏è VITE_API_URL = $VITE_API_URL"
          echo "üì¶ S3_PREFIX = $S3_PREFIX"
          echo "üöÄ CLOUDFRONT_ID = $CLOUDFRONT_ID"

      - name: ‚ùå Clean old dist
        run: rm -rf dist

      - name: Build
        run: npm run build

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1
          mask-aws-account-id: true

      - name: üïµÔ∏è Who am I?
        run: aws sts get-caller-identity

      - name: AWS Permissions Check
        run: |
          aws cloudfront list-distributions --max-items 1
          aws s3 ls s3://${{ secrets.S3_BUCKET }}

      - name: Deploy to S3
        run: aws s3 sync dist/ s3://${{ secrets.S3_BUCKET }}/$S3_PREFIX --delete

      - name: ‚úÖ Invalidate CloudFront cache
        run: |
          echo "Creating invalidation for distribution ID: $CLOUDFRONT_ID"
          if [[ -z "$CLOUDFRONT_ID" ]]; then
            echo "‚ùå CLOUDFRONT_ID is empty. Aborting invalidation."
            exit 1
          fi
          INVALIDATION_ID=$(aws cloudfront create-invalidation \
            --distribution-id "$CLOUDFRONT_ID" \
            --paths "/*" \
            --query 'Invalidation.Id' \
            --output text)
          echo "‚úÖ Invalidation ID: $INVALIDATION_ID"
          echo "‚è≥ Waiting for invalidation to complete..."
          aws cloudfront wait invalidation-completed \
            --distribution-id "$CLOUDFRONT_ID" \
            --id "$INVALIDATION_ID"
